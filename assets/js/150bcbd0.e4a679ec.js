"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[3776],{8924:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});var n=i(9789),r=i(4848),s=i(8453);const o={title:"Reactive Social Network Service with Skip",description:"Build step by step a skip service",slug:"reactive_social_network_service_poc",date:new Date("2025-04-30T00:00:00.000Z"),authors:"hubyrod"},a=void 0,c={authorsImageUrls:[void 0]},l=[];function p(e){const t={a:"a",blockquote:"blockquote",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Reactive programming often sounds complex\u2014but it doesn't have to be. What if you could actually see how data responds to change, in real time, right from your terminal?"}),"\n",(0,r.jsxs)(t.p,{children:["In this tutorial, we walk through building a small proof-of-concept social network backend using ",(0,r.jsx)(t.a,{href:"https://www.skiplabs.io/",children:"Skip"}),' and TypeScript. It tracks users, groups, and their friendships\u2014with automatic updates to "active friends" using Skip\u2019s reactive computation graph.']}),"\n",(0,r.jsx)(t.p,{children:"You\u2019ll learn how to:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Set up a reactive Skip service"}),"\n",(0,r.jsx)(t.li,{children:"Define users and groups as live-updating resources"}),"\n",(0,r.jsx)(t.li,{children:"Connect it all to a REST API using Express"}),"\n",(0,r.jsx)(t.li,{children:"Observe real-time updates as the data evolves"}),"\n"]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:'"The simpler, the merrier" \u2014 this project keeps things minimal, focused, and easy to explore.'}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"From Alice adding a new friend to live data reactions, this guide makes reactive systems tangible."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var n=i(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},9789:e=>{e.exports=JSON.parse('{"permalink":"/blog/reactive_social_network_service_poc","source":"@site/blog/reactive_social_skip_service_poc.md","title":"Reactive Social Network Service with Skip","description":"Build step by step a skip service","date":"2025-04-30T00:00:00.000Z","tags":[],"readingTime":9.93,"hasTruncateMarker":true,"authors":[{"name":"Hugo Venturini","title":"Software Engineer","url":"https://www.linkedin.com/in/venturini/","key":"hubyrod","page":null}],"frontMatter":{"title":"Reactive Social Network Service with Skip","description":"Build step by step a skip service","slug":"reactive_social_network_service_poc","date":"2025-04-30T00:00:00.000Z","authors":"hubyrod"},"unlisted":false,"prevItem":{"title":"Building a Real-time Blog with Skip and PostgreSQL","permalink":"/blog/postgresql_and_skip"},"nextItem":{"title":"Event-Hidden Architectures","permalink":"/blog/event-hidden-arch"}}')}}]);