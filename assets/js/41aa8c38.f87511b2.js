"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[2562],{9097:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api/helpers/classes/Count","title":"Count&lt;T&gt;","description":"Reducer to maintain the count of input values.","source":"@site/docs/api/helpers/classes/Count.md","sourceDirName":"api/helpers/classes","slug":"/api/helpers/classes/Count","permalink":"/docs/api/helpers/classes/Count","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"ExternalResource","permalink":"/docs/api/helpers/interfaces/ExternalResource"},"next":{"title":"CountMapper","permalink":"/docs/api/helpers/classes/CountMapper"}}');var d=l(4848),s=l(8453);const t={},c="Count<T>",i={},a=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new Count()",id:"new-count",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"add()",id:"add",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"remove()",id:"remove",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Properties",id:"properties",level:2},{value:"initial",id:"initial",level:3},{value:"Implementation of",id:"implementation-of-2",level:4}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"countt",children:"Count<T>"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Reducer"})," to maintain the count of input values."]}),"\n",(0,d.jsxs)(n.p,{children:["A ",(0,d.jsx)(n.code,{children:"Reducer"})," that maintains the number of values as they are added and removed from a collection."]}),"\n",(0,d.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type Parameter"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"T"})," ",(0,d.jsx)(n.em,{children:"extends"})," ",(0,d.jsx)(n.code,{children:"Json"})]})})})]}),"\n",(0,d.jsx)(n.h2,{id:"implements",children:"Implements"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"Reducer"}),"<",(0,d.jsx)(n.code,{children:"T"}),", ",(0,d.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h3,{id:"new-count",children:"new Count()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"new Count<T>(): Count<T>\n"})}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/docs/api/helpers/classes/Count",children:(0,d.jsx)(n.code,{children:"Count"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"add",children:"add()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"add(accum): number\n"})}),"\n",(0,d.jsx)(n.p,{children:"Include a new value into the accumulated value."}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"accum"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsxs)(n.td,{children:["The current accumulated value; ",(0,d.jsx)(n.code,{children:"null"})," only if ",(0,d.jsx)(n.code,{children:"initial"})," is ",(0,d.jsx)(n.code,{children:"null"})," and ",(0,d.jsx)(n.code,{children:"value"})," is the first to be added."]})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"number"})}),"\n",(0,d.jsx)(n.p,{children:"The updated accumulated value."}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of",children:"Implementation of"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"Reducer.add"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"remove",children:"remove()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"remove(accum): Nullable<number>\n"})}),"\n",(0,d.jsx)(n.p,{children:"Exclude a previously added value from the accumulated value."}),"\n",(0,d.jsxs)(n.p,{children:["It is always valid for ",(0,d.jsx)(n.code,{children:"remove"})," to return ",(0,d.jsx)(n.code,{children:"null"}),", in which case the correct accumulated value will be computed using ",(0,d.jsx)(n.code,{children:"initial"})," and ",(0,d.jsx)(n.code,{children:"add"})," on each of the key's values."]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"WARNING"}),": If ",(0,d.jsx)(n.code,{children:"remove"})," returns a non-",(0,d.jsx)(n.code,{children:"null"})," value, then it ",(0,d.jsx)(n.strong,{children:"must"})," be equal to calling ",(0,d.jsx)(n.code,{children:"add"})," on each of the values associated to the key, starting from ",(0,d.jsx)(n.code,{children:"initial"}),".\nThat is, ",(0,d.jsx)(n.code,{children:"accum"}),", ",(0,d.jsx)(n.code,{children:"add(remove(accum, value), value)"}),", and ",(0,d.jsx)(n.code,{children:"remove(add(accum, value), value)"})," must all be equal for any ",(0,d.jsx)(n.code,{children:"accum"})," and ",(0,d.jsx)(n.code,{children:"value"})," unless both the mentioned ",(0,d.jsx)(n.code,{children:"remove"})," calls return ",(0,d.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"accum"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"The current accumulated value."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Nullable"}),"<",(0,d.jsx)(n.code,{children:"number"}),">"]}),"\n",(0,d.jsxs)(n.p,{children:["The updated accumulated value, or ",(0,d.jsx)(n.code,{children:"null"})," indicating that the accumulated value should be recomputed using ",(0,d.jsx)(n.code,{children:"add"})," and ",(0,d.jsx)(n.code,{children:"initial"}),"."]}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of-1",children:"Implementation of"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"Reducer.remove"})}),"\n",(0,d.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,d.jsx)(n.h3,{id:"initial",children:"initial"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"initial: number;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Initial accumulated value, providing the accumulated value for keys that are not associated to any values."}),"\n",(0,d.jsx)(n.h4,{id:"implementation-of-2",children:"Implementation of"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"Reducer.initial"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>t,x:()=>c});var r=l(6540);const d={},s=r.createContext(d);function t(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);