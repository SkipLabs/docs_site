"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1326],{4712:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var a=i(9551),n=i(4848),o=i(8453);const s={title:"Discussion with Lucas, a SkipLabs engineer",description:"An in-depth conversation with a SkipLabs engineer about reactive programming, performance optimization, and the technical challenges of building scalable data synchronization tools.",slug:"interview_lucas",date:new Date("2025-07-11T00:00:00.000Z"),authors:"hubyrod"},r=void 0,l={authorsImageUrls:[void 0]},h=[{value:"How long have you been working at SkipLabs?",id:"how-long-have-you-been-working-at-skiplabs",level:2},{value:"In a few words, what do you do at SkipLabs?",id:"in-a-few-words-what-do-you-do-at-skiplabs",level:2},{value:"How would you describe the engineering culture at SkipLabs?",id:"how-would-you-describe-the-engineering-culture-at-skiplabs",level:2},{value:"So how do you approach scalability challenges?",id:"so-how-do-you-approach-scalability-challenges",level:2},{value:"And in your latest tests, what were the main bottlenecks you identified?",id:"and-in-your-latest-tests-what-were-the-main-bottlenecks-you-identified",level:2},{value:"And in those load tests, what metrics do you prioritize?",id:"and-in-those-load-tests-what-metrics-do-you-prioritize",level:2},{value:"And on the server side, what do you measure?",id:"and-on-the-server-side-what-do-you-measure",level:2},{value:"Beyond technical challenges, what do you see as the bigger issues in this field?",id:"beyond-technical-challenges-what-do-you-see-as-the-bigger-issues-in-this-field",level:2},{value:"What do you enjoy most about your work right now?",id:"what-do-you-enjoy-most-about-your-work-right-now",level:2},{value:"Taking a step back, what would you like to see evolve in computing today?",id:"taking-a-step-back-what-would-you-like-to-see-evolve-in-computing-today",level:2},{value:"Valuing open source as a shared public good:",id:"valuing-open-source-as-a-shared-public-good",level:3},{value:"Rethinking how we interact with code:",id:"rethinking-how-we-interact-with-code",level:3},{value:"Mainstreaming cryptography in the digital public sphere:",id:"mainstreaming-cryptography-in-the-digital-public-sphere",level:3},{value:"Thanks, Lucas",id:"thanks-lucas",level:2}];function c(e){const t={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Ever wondered what it's like to work on cutting-edge reactive programming? This chat with a Lucas, a SkipLabs engineer, gives you the inside scoop on building tools that tackle gnarly data synchronization problems. We have created something called the Skip Framework, which runs on our own programming language, SkipLang, pretty cool stuff. What makes this interview particularly interesting is how it bounces between the nuts and bolts of performance testing (like figuring out why stream creation was too slow) and the bigger picture of where tech is headed. You'll get a feel for SkipLabs' laid-back engineering culture where people work independently but always have each other's backs, plus some thoughtful takes on everything from open source development to why we still edit code like it's 1995. Whether you're into the technical weeds of load testing or curious about how small teams tackle ambitious projects, there's something here for you."}),"\n","\n",(0,n.jsx)(t.h2,{id:"how-long-have-you-been-working-at-skiplabs",children:"How long have you been working at SkipLabs?"}),"\n",(0,n.jsx)(t.p,{children:"I joined SkipLabs in November 2022, so it's been a little over two and a half years now."}),"\n",(0,n.jsx)(t.h2,{id:"in-a-few-words-what-do-you-do-at-skiplabs",children:"In a few words, what do you do at SkipLabs?"}),"\n",(0,n.jsx)(t.p,{children:"At SkipLabs, we develop tools focused on reactive programming. Our goal is to solve complex data synchronization problems while making this approach accessible and cost-effective in terms of infrastructure."}),"\n",(0,n.jsx)(t.p,{children:"In practical terms, reactive programming is a declarative way of expressing computations: instead of manually handling state transitions, you simply describe state as a function of multiple inputs."}),"\n",(0,n.jsx)(t.p,{children:"To make this approach tangible and usable on a daily basis, we created the Skip Framework\u2014a reactive programming framework designed to be both powerful and easy to adopt."}),"\n",(0,n.jsx)(t.h2,{id:"how-would-you-describe-the-engineering-culture-at-skiplabs",children:"How would you describe the engineering culture at SkipLabs?"}),"\n",(0,n.jsx)(t.p,{children:"I\u2019d say the engineering culture at SkipLabs is built first and foremost on trust and individual responsibility. Everyone pulls their weight and doesn\u2019t hesitate to get their hands dirty when needed\u2014even with tasks that may be a bit thankless. There\u2019s a real collective drive to move things forward, and it shows in the general vibe: everyone is experienced, which allows us to work in parallel in a smooth and efficient way."}),"\n",(0,n.jsx)(t.p,{children:"We operate in a fairly open and independent manner, with very few meetings. And despite this autonomy, there\u2019s a lot of mutual support\u2014whenever a question arises, someone is always there to help. Our expertise is quite diverse, which is a real strength. Several people on the team have a strong background in programming languages and a deep interest in low-level systems\u2014especially compilers and LLVM, which sit at the heart of our stack."}),"\n",(0,n.jsx)(t.p,{children:"On the tech side, the Skip Framework is currently exposed via a TypeScript API, and soon also via a native API in SkipLang. At the core of it all is a programming language, SkipLang, designed by Julien (previously at Facebook). The language was built to provide strong guarantees about data mutability\u2014making it clear what can and cannot change, to enable safe and efficient cache invalidation.\nWe use this language today. It has its own compiler, written in SkipLang itself, which targets LLVM as a backend. This gives us strong performance while maintaining high portability: the framework can be compiled natively or to WebAssembly, which makes it possible, for example, to run it directly in a browser. In addition to SkipLang and TypeScript, we also use some Python and Bash\u2014classic tools to keep everything running smoothly."}),"\n",(0,n.jsx)(t.h2,{id:"so-how-do-you-approach-scalability-challenges",children:"So how do you approach scalability challenges?"}),"\n",(0,n.jsx)(t.p,{children:"For me, scalability starts with the ability to accurately measure performance. Before even thinking about optimization, you need reliable metrics\u2014and ideally, with minimal manual intervention. Manual handling quickly becomes a source of errors, especially in systems as complex as ours."}),"\n",(0,n.jsx)(t.p,{children:"It\u2019s crucial to measure what you actually want to observe\u2014not just loosely correlated metrics. Once you have a solid measurement foundation, you can start large-scale analysis, deep profiling, pinpoint real bottlenecks, and invest where it really matters. Right now, we\u2019re specifically working on load testing Skip to better understand how our system behaves under different loads, and to validate our horizontal scalability. It\u2019s a progressive process, but essential to ensuring strong performance in varied environments."}),"\n",(0,n.jsx)(t.h2,{id:"and-in-your-latest-tests-what-were-the-main-bottlenecks-you-identified",children:"And in your latest tests, what were the main bottlenecks you identified?"}),"\n",(0,n.jsx)(t.p,{children:"One of the first bottlenecks we found was in the creation of streams. Once a stream is set up, performance is excellent, even with multiple users subscribing in parallel. But the initial creation phase can be a bit too slow. We\u2019re currently working on a fix to improve that."}),"\n",(0,n.jsx)(t.p,{children:"This kind of issue really shows how important fine-grained, automated tracing is\u2014to avoid local changes negatively affecting other parts of the system. Working as a team also means writing code that helps\u2014or at least doesn\u2019t hinder\u2014others\u2019 work. This is why we\u2019re implementing recurring load tests that run automatically in our CI. The goal is to detect performance regressions early and make sure different optimizations continue to work well together, even as the codebase evolves."}),"\n",(0,n.jsx)(t.h2,{id:"and-in-those-load-tests-what-metrics-do-you-prioritize",children:"And in those load tests, what metrics do you prioritize?"}),"\n",(0,n.jsx)(t.p,{children:"There are several, but the most important is: how many users can we serve under acceptable conditions for a given budget? We aim to stay close to real-world use cases. Depending on the services being tested, some loads involve heavy writing, others are mostly read-heavy. Some may involve lots of shared data, others significant server-side computation before results are pushed out."}),"\n",(0,n.jsx)(t.p,{children:"One key metric is replication time: when a client writes data, how long does it take for that data to be visible to all other affected clients? This delay depends on the associated computation graph, so it can vary a lot\u2014but it\u2019s an essential metric for us.\nOnce we\u2019ve defined what counts as an acceptable client-side response time, we check how many clients we can serve with a single instance. Then we measure how that capacity scales when adding more servers\u2014that\u2019s our horizontal scalability curve."}),"\n",(0,n.jsx)(t.h2,{id:"and-on-the-server-side-what-do-you-measure",children:"And on the server side, what do you measure?"}),"\n",(0,n.jsx)(t.p,{children:"There, we focus on how well we\u2019re using available resources. For example: how many server instances can we run efficiently on a given machine? Are we fully utilizing RAM, CPU cores? There\u2019s no point in paying for unused capacity. We complement that with regular profiling to ensure there are no avoidable bottlenecks in our server stack. It\u2019s an ongoing effort, but it gives us real visibility into the system\u2019s actual performance."}),"\n",(0,n.jsx)(t.h2,{id:"beyond-technical-challenges-what-do-you-see-as-the-bigger-issues-in-this-field",children:"Beyond technical challenges, what do you see as the bigger issues in this field?"}),"\n",(0,n.jsx)(t.p,{children:"I see three fundamental challenges:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Correctness"})," \u2013 We want clients to receive data that is both fresh and accurate, with mathematical guarantees that what they see is consistent with the system\u2019s state. That\u2019s non-negotiable."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Performance"})," \u2013 All of that has to happen as fast as possible, even at large scale. Offering low-latency reactivity is a bold promise\u2014and a serious technical challenge."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Developer ergonomics"})," \u2013 This is often underestimated but just as crucial. Our goal is for developers to express business logic as declaratively and clearly as possible. Ideally, they focus only on what they want to produce, not how data will sync or update. It\u2019s our job to ensure that works smoothly behind the scenes."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"To achieve this, we need a sound and efficient computation model, solid implementation, and a clean codebase. That\u2019s what we\u2019re building with Skip: a technical foundation that lets you offload complexity without compromising rigor."}),"\n",(0,n.jsx)(t.h2,{id:"what-do-you-enjoy-most-about-your-work-right-now",children:"What do you enjoy most about your work right now?"}),"\n",(0,n.jsx)(t.p,{children:"Benchmarking itself isn\u2019t necessarily what excites me most\u2014but right now it\u2019s pretty thrilling, because we\u2019re entering a new phase of the project. After months of prototyping and refining the core of the framework, we\u2019re finally putting it through real-world load testing. Now we can truly measure how far this new paradigm can go under real conditions. It\u2019s gratifying to see that what we\u2019ve built\u2014brick by brick\u2014is starting to hold up at scale, and that the choices we\u2019ve made are beginning to pay off."}),"\n",(0,n.jsx)(t.h2,{id:"taking-a-step-back-what-would-you-like-to-see-evolve-in-computing-today",children:"Taking a step back, what would you like to see evolve in computing today?"}),"\n",(0,n.jsx)(t.p,{children:"There are quite a few things I\u2019d like to see change, but if I had to summarize, I\u2019d highlight three key areas that matter most to me:"}),"\n",(0,n.jsx)(t.h3,{id:"valuing-open-source-as-a-shared-public-good",children:"Valuing open source as a shared public good:"}),"\n",(0,n.jsx)(t.p,{children:"I believe open source\u2014or more broadly, digital commons\u2014are still vastly underdeveloped relative to their importance. These are software foundations that benefit everyone and deserve more collective investment."}),"\n",(0,n.jsx)(t.p,{children:"At SkipLabs, we work in open source under MIT license, and that\u2019s one of the reasons I joined the team."}),"\n",(0,n.jsx)(t.h3,{id:"rethinking-how-we-interact-with-code",children:"Rethinking how we interact with code:"}),"\n",(0,n.jsx)(t.p,{children:"Today, as developers, our interaction with code is still quite \u201cprimitive\u201d: we\u2019re just editing letters on a page. Even though modern editors add powerful features, it\u2019s still largely syntax-level work.\nI\u2019d like us to move toward tools that support semantic interaction with code\u2014like version control that understands the intent behind a change, not just a diff of characters. That would unlock deeper collaboration, better understanding, and smarter analysis tools. It\u2019s a major area for innovation."}),"\n",(0,n.jsx)(t.h3,{id:"mainstreaming-cryptography-in-the-digital-public-sphere",children:"Mainstreaming cryptography in the digital public sphere:"}),"\n",(0,n.jsx)(t.p,{children:"I think we should make broader use of asymmetric cryptography for things involving public speech, traceability, or authorship\u2014without necessarily resorting to blockchain. Digital signatures alone are enough in many cases."}),"\n",(0,n.jsx)(t.p,{children:"Right now, these tools are still largely inaccessible to the general public, which is a real problem. I think it\u2019s crucial to defend a web architecture that respects individual freedoms\u2014and that includes broad adoption of tools like encrypted email, and digital signatures, ideally within an open-source ecosystem."}),"\n",(0,n.jsx)(t.h2,{id:"thanks-lucas",children:"Thanks, Lucas"}),"\n",(0,n.jsx)(t.p,{children:"Thanks to you !"})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>r});var a=i(6540);const n={},o=a.createContext(n);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(o.Provider,{value:t},e.children)}},9551:e=>{e.exports=JSON.parse('{"permalink":"/blog/interview_lucas","source":"@site/blog/interview_lucas.md","title":"Discussion with Lucas, a SkipLabs engineer","description":"An in-depth conversation with a SkipLabs engineer about reactive programming, performance optimization, and the technical challenges of building scalable data synchronization tools.","date":"2025-07-11T00:00:00.000Z","tags":[],"readingTime":7.965,"hasTruncateMarker":false,"authors":[{"name":"Hugo Venturini","title":"Software Engineer","url":"https://www.linkedin.com/in/venturini/","key":"hubyrod","page":null}],"frontMatter":{"title":"Discussion with Lucas, a SkipLabs engineer","description":"An in-depth conversation with a SkipLabs engineer about reactive programming, performance optimization, and the technical challenges of building scalable data synchronization tools.","slug":"interview_lucas","date":"2025-07-11T00:00:00.000Z","authors":"hubyrod"},"unlisted":false,"prevItem":{"title":"From Zero to Running Service to Demonstrate Cache Invalidation","permalink":"/blog/getting_started_with_create_skip_service"},"nextItem":{"title":"Cache Invalidation and Reactive Systems","permalink":"/blog/cache_invalidation"}}')}}]);