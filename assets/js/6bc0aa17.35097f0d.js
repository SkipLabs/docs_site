"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[3324],{4419:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/core/interfaces/SkipService","title":"SkipService&lt;Inputs, ResourceInputs&gt;","description":"A Skip reactive service encapsulating a reactive computation.","source":"@site/docs/api/core/interfaces/SkipService.md","sourceDirName":"api/core/interfaces","slug":"/api/core/interfaces/SkipService","permalink":"/docs/api/core/interfaces/SkipService","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Resource","permalink":"/docs/api/core/interfaces/Resource"},"next":{"title":"Values","permalink":"/docs/api/core/interfaces/Values"}}');var i=s(4848),n=s(8453);const c={},a="SkipService<Inputs, ResourceInputs>",o={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"createGraph()",id:"creategraph",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"externalServices?",id:"externalservices",level:3},{value:"Index Signature",id:"index-signature",level:4},{value:"initialData?",id:"initialdata",level:3},{value:"Remarks",id:"remarks",level:4},{value:"resources",id:"resources",level:3},{value:"Index Signature",id:"index-signature-1",level:4}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"skipserviceinputs-resourceinputs",children:"SkipService<Inputs, ResourceInputs>"})}),"\n",(0,i.jsx)(t.p,{children:"A Skip reactive service encapsulating a reactive computation."}),"\n",(0,i.jsxs)(t.p,{children:["A reactive Skip service is defined by a class implementing this ",(0,i.jsx)(t.code,{children:"SkipService"})," interface."]}),"\n",(0,i.jsxs)(t.p,{children:["Skip services operate over data organized into ",(0,i.jsx)(t.em,{children:"collections"}),", each of which has a unique string name and associates ",(0,i.jsx)(t.em,{children:"keys"})," to one or more ",(0,i.jsx)(t.em,{children:"values"}),".\nThe contents of collections are computed from initial data, other collections, or reactive or non-reactive external resources."]}),"\n",(0,i.jsxs)(t.p,{children:["A Skip service's ",(0,i.jsx)(t.code,{children:"Inputs"})," are collections that start populated with the ",(0,i.jsx)(t.code,{children:"initialData"}),".\nThe input collections is the mechanism by which a Skip service can accept writes.\nSee ",(0,i.jsx)(t.code,{children:"runService"})," for the write requests of the HTTP API, and ",(0,i.jsx)(t.code,{children:"SkipServiceBroker"})," for the write operations of the method-call API."]}),"\n",(0,i.jsxs)(t.p,{children:["It can be useful to think of the structure of a service's computation as a directed acyclic graph, the ",(0,i.jsx)(t.em,{children:"reactive computation graph"}),", where the vertices are the named collections, and the edges are the functions (",(0,i.jsx)(t.code,{children:"Mapper"}),"s and ",(0,i.jsx)(t.code,{children:"Reducer"}),"s) that produce collections from other collections.\nPart of the graph is structured in a way that is not dependent on the data or requests the service encounters at runtime: it is ",(0,i.jsx)(t.em,{children:"static"}),".\nThe rest of the graph is ",(0,i.jsx)(t.em,{children:"dynamic"})," in the sense that collections/vertices are added in response to requests and data received at runtime by the service.\nThe static portion of the graph is defined by ",(0,i.jsx)(t.code,{children:"createGraph"}),", which receives the service's input collections.\nThe result of ",(0,i.jsx)(t.code,{children:"createGraph"})," is the boundary of the static reactive computation graph: named collections that are made available to the dynamic reactive computation graph as inputs to the ",(0,i.jsx)(t.code,{children:"instantiate"})," computations of ",(0,i.jsx)(t.code,{children:"Resource"}),"s."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Resource"}),"s are the mechanism by which a service's collections are exposed to other services and clients for reading.\nA ",(0,i.jsx)(t.code,{children:"Resource"})," implementation provides an ",(0,i.jsx)(t.code,{children:"instantiate"})," function which is similar to ",(0,i.jsx)(t.code,{children:"createGraph"})," but receives the boundary collections of the static reactive computation graph and only produces a single collection.\nThe simplest ",(0,i.jsx)(t.code,{children:"Resource"}),"s just return one of the collections they receive as an argument, thereby exposing a collection that would otherwise be internal to the service.\n",(0,i.jsx)(t.code,{children:"Resource"}),"s define the ",(0,i.jsx)(t.em,{children:"dynamic"})," portion of the reactive computation graph that arises in response to requests and data at runtime, extending the ",(0,i.jsx)(t.em,{children:"static"})," computation graph."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Resource"}),"s are exposed by a ",(0,i.jsx)(t.code,{children:"SkipService"})," implementation providing ",(0,i.jsx)(t.code,{children:"resources"})," that associates resource names to ",(0,i.jsx)(t.code,{children:"Resource"})," constructors.\nThe interface involves class constructor functions for ",(0,i.jsx)(t.code,{children:"Resource"}),"s since they are instantiated at runtime by the Skip framework in response to requests, using parameters provided as part of the request.\nWhen a ",(0,i.jsx)(t.code,{children:"SkipService"})," receives a request, the corresponding ",(0,i.jsx)(t.code,{children:"Resource"})," constructor is called with parameters obtained from the request, the resource object's ",(0,i.jsx)(t.code,{children:"instantiate"})," function is called to produce a collection containing the results.\nDepending on the request, the requestor can read these results synchronously or subscribe to a stream of update events.\nResource result collections are maintained up-to-date, with updates being reactively pushed to subscribers.\nSee ",(0,i.jsx)(t.code,{children:"runService"})," for the HTTP API for reading resources, and ",(0,i.jsx)(t.code,{children:"SkipServiceBroker"})," for a method-call API."]}),"\n",(0,i.jsxs)(t.p,{children:["Some of a Skip service's collections, those of type ",(0,i.jsx)(t.code,{children:"EagerCollection"}),", are eagerly kept up-to-date by the framework.\nThis includes the static portion of the reactive computation graph, so the static portion serves as pre-computed data that can be used by individual requests.\nThe result collections produced by instantiating ",(0,i.jsx)(t.code,{children:"Resource"}),"s are also eager and kept up-to-date.\nNote that this implies that the static portion of the reactive computation graph, as well as the results of resources, are eagerly updated when the service receives a write to an input collection.\nThe computation of a ",(0,i.jsx)(t.code,{children:"Resource"}),"'s output collection may use intermediate collections that are either eager or lazy.\nA lazy collection, of type ",(0,i.jsx)(t.code,{children:"LazyCollection"}),", is one where the entries are only computed on-demand as a result of querying particular keys.\nLazy collections memoize computations that are performed as part of computing the result of an update to an input of an eager collection.\nLazy collections cannot be directly exposed as resources, but a couple auxiliary eager collections can be used to achieve the same effect."]}),"\n",(0,i.jsxs)(t.p,{children:["Skip services can also make use of external services to compute their results.\nWithin the bodies of ",(0,i.jsx)(t.code,{children:"SkipService.createGraph"})," or ",(0,i.jsx)(t.code,{children:"Resource.instantiate"}),", an external service can be accessed using ",(0,i.jsx)(t.code,{children:"Context.useExternalResource"}),".\n",(0,i.jsx)(t.code,{children:"Context.useExternalResource"})," accepts the name of an external service, which must be associated to an instance of the ",(0,i.jsx)(t.code,{children:"ExternalService"})," interface by the ",(0,i.jsx)(t.code,{children:"externalServices"}),", as well as a resource the external service provides and parameters for it, and returns an eager collection of the contents of the resource provided by the external service.\nThe resulting eager collection can then be incorporated into the reactive computation graph just like any other."]}),"\n",(0,i.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Type Parameter"}),(0,i.jsx)(t.th,{children:"Default type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"Inputs"})," ",(0,i.jsx)(t.em,{children:"extends"})," ",(0,i.jsx)(t.a,{href:"/docs/api/core/type-aliases/NamedCollections",children:(0,i.jsx)(t.code,{children:"NamedCollections"})})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/docs/api/core/type-aliases/NamedCollections",children:(0,i.jsx)(t.code,{children:"NamedCollections"})})}),(0,i.jsx)(t.td,{children:"The service's input collections."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"ResourceInputs"})," ",(0,i.jsx)(t.em,{children:"extends"})," ",(0,i.jsx)(t.a,{href:"/docs/api/core/type-aliases/NamedCollections",children:(0,i.jsx)(t.code,{children:"NamedCollections"})})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/docs/api/core/type-aliases/NamedCollections",children:(0,i.jsx)(t.code,{children:"NamedCollections"})})}),(0,i.jsxs)(t.td,{children:["Collections provided to the resource computation by the service's ",(0,i.jsx)(t.code,{children:"createGraph"}),"."]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.h3,{id:"creategraph",children:"createGraph()"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"createGraph(inputCollections, context): ResourceInputs\n"})}),"\n",(0,i.jsx)(t.p,{children:"Build the static reactive computation graph by defining collections to be passed to resources."}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"inputCollections"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Inputs"})}),(0,i.jsx)(t.td,{children:"The service's input collections."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"context"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/docs/api/core/interfaces/Context",children:(0,i.jsx)(t.code,{children:"Context"})})}),(0,i.jsx)(t.td,{children:"Skip Runtime internal state."})]})]})]}),"\n",(0,i.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"ResourceInputs"})}),"\n",(0,i.jsx)(t.p,{children:"Reactive collections accessible to the resources."}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(t.h3,{id:"externalservices",children:"externalServices?"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"optional externalServices: object;\n"})}),"\n",(0,i.jsx)(t.p,{children:"External services that may be used by this service's reactive computation."}),"\n",(0,i.jsx)(t.h4,{id:"index-signature",children:"Index Signature"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"[name: string]: ExternalService\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"initialdata",children:"initialData?"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"optional initialData: InitialData<Inputs>;\n"})}),"\n",(0,i.jsx)(t.p,{children:"Initial data for this service's input collections."}),"\n",(0,i.jsx)(t.h4,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(t.p,{children:["While the initial data is not required to have a ",(0,i.jsx)(t.code,{children:"DepSafe"})," type (only a subtype of ",(0,i.jsx)(t.code,{children:"Json"})," is required); note that any modifications made to any objects passed as ",(0,i.jsx)(t.code,{children:"initialData"})," will ",(0,i.jsx)(t.em,{children:"not"})," be seen by a service once started."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"resources",children:"resources"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"resources: object;\n"})}),"\n",(0,i.jsx)(t.p,{children:"Reactive resources which constitute the public interface of this reactive service."}),"\n",(0,i.jsx)(t.h4,{id:"index-signature-1",children:"Index Signature"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"[name: string]: (params) => Resource<ResourceInputs>\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var r=s(6540);const i={},n=r.createContext(i);function c(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);