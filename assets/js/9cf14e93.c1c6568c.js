"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[4933],{4563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api/core/interfaces/LazyCompute","title":"LazyCompute&lt;K, V&gt;","description":"Reactive function that is computed lazily and memoized.","source":"@site/docs/api/core/interfaces/LazyCompute.md","sourceDirName":"api/core/interfaces","slug":"/api/core/interfaces/LazyCompute","permalink":"/docs/api/core/interfaces/LazyCompute","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"LazyCollection","permalink":"/docs/api/core/interfaces/LazyCollection"},"next":{"title":"Mapper","permalink":"/docs/api/core/interfaces/Mapper"}}');var c=n(4848),r=n(8453);const i={},o="LazyCompute<K, V>",d={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"compute()",id:"compute",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4}];function a(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"lazycomputek-v",children:"LazyCompute<K, V>"})}),"\n",(0,c.jsxs)(t.p,{children:["Reactive function that is computed ",(0,c.jsx)(t.em,{children:"lazily"})," and memoized."]}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"Context.createLazyCollection"})," accepts a constructor function of a top-level class that implements this ",(0,c.jsx)(t.code,{children:"LazyCompute"})," interface.\nEach implementation of ",(0,c.jsx)(t.code,{children:"LazyCompute"})," provides a ",(0,c.jsx)(t.code,{children:"compute"})," function, which produces values for some ",(0,c.jsx)(t.code,{children:"key"}),", possibly using a ",(0,c.jsx)(t.code,{children:"self"})," reference to get/produce other lazily-computed results."]}),"\n",(0,c.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Type Parameter"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsxs)(t.td,{children:[(0,c.jsx)(t.code,{children:"K"})," ",(0,c.jsx)(t.em,{children:"extends"})," ",(0,c.jsx)(t.a,{href:"/docs/api/core/type-aliases/Json",children:(0,c.jsx)(t.code,{children:"Json"})})]}),(0,c.jsx)(t.td,{children:"Type of keys / inputs."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsxs)(t.td,{children:[(0,c.jsx)(t.code,{children:"V"})," ",(0,c.jsx)(t.em,{children:"extends"})," ",(0,c.jsx)(t.a,{href:"/docs/api/core/type-aliases/Json",children:(0,c.jsx)(t.code,{children:"Json"})})]}),(0,c.jsx)(t.td,{children:"Type of values / outputs."})]})]})]}),"\n",(0,c.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(t.h3,{id:"compute",children:"compute()"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-ts",children:"compute(\n   self, \n   key, \n   context): Iterable<V>\n"})}),"\n",(0,c.jsxs)(t.p,{children:["Compute the values of the lazy function for a given ",(0,c.jsx)(t.code,{children:"key"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["When computing the values for a requested key, the ",(0,c.jsx)(t.code,{children:"compute"})," function is provided with a ",(0,c.jsx)(t.code,{children:"LazyCollection"})," that is tabulating the input-output relation of this function.\nThis collection can be queried in order to look up the values for previously computed keys, or to make a recursive call to ",(0,c.jsx)(t.code,{children:"compute"})," if the requested key has not yet been computed."]}),"\n",(0,c.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Parameter"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"self"})}),(0,c.jsxs)(t.td,{children:[(0,c.jsx)(t.a,{href:"/docs/api/core/interfaces/LazyCollection",children:(0,c.jsx)(t.code,{children:"LazyCollection"})}),"<",(0,c.jsx)(t.code,{children:"K"}),", ",(0,c.jsx)(t.code,{children:"V"}),">"]}),(0,c.jsx)(t.td,{children:"The collection tabulating this lazy function."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"key"})}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"K"})}),(0,c.jsx)(t.td,{children:"The requested key / input."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"context"})}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.a,{href:"/docs/api/core/interfaces/Context",children:(0,c.jsx)(t.code,{children:"Context"})})}),(0,c.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,c.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"Iterable"}),"<",(0,c.jsx)(t.code,{children:"V"}),">"]}),"\n",(0,c.jsxs)(t.p,{children:["The values of the lazy function for ",(0,c.jsx)(t.code,{children:"key"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(6540);const c={},r=s.createContext(c);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);