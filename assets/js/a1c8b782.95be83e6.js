"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[647],{5887:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var i=n(512),r=n(4848),s=n(8453);const o={title:"Dynamically scaling your Skip services",description:"How to horizontally scale Skip services with Kubernetes",slug:"horizontal-scaling",date:new Date("2025-06-06T00:00:00.000Z"),authors:"benno"},a=void 0,c={authorsImageUrls:[void 0]},l=[];function u(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Skip makes it fast and easy to build reactive services which efficiently update\ntheir outputs in response to input changes, powering real-time features and\nsaving resources by avoiding unnecessary recomputations."}),"\n",(0,r.jsx)(t.p,{children:"The technical foundation that makes this possible is Skip's hyper-efficient\nreactive computation graph, which is written in the Skip programming language,\nruns natively, and takes great pains to efficiently represent and manipulate\nthe data underlying your reactive system."}),"\n",(0,r.jsx)(t.p,{children:"However, that still requires memory, compute, and other resources -- so what do\nyou do when traffic spikes or grows beyond the capacity of even a powerful\nsingle machine? Scale out and distribute your reactive service across more\nmachines, of course!"})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},512:e=>{e.exports=JSON.parse('{"permalink":"/blog/horizontal-scaling","source":"@site/blog/scaling.md","title":"Dynamically scaling your Skip services","description":"How to horizontally scale Skip services with Kubernetes","date":"2025-06-06T00:00:00.000Z","tags":[],"readingTime":3.94,"hasTruncateMarker":true,"authors":[{"name":"Benno Stein","title":"Senior Engineer","url":"https://bennostein.org","key":"benno","page":null}],"frontMatter":{"title":"Dynamically scaling your Skip services","description":"How to horizontally scale Skip services with Kubernetes","slug":"horizontal-scaling","date":"2025-06-06T00:00:00.000Z","authors":"benno"},"unlisted":false,"prevItem":{"title":"Backend Pressure from a Reactive Point of View","permalink":"/blog/backend_pressure"},"nextItem":{"title":"React + Vite in front of a Skip Service - the template","permalink":"/blog/skip_with_react_vite"}}')}}]);