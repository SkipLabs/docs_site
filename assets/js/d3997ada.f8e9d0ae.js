"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[4383],{8021:(e,d,c)=>{c.r(d),c.d(d,{assets:()=>i,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"api/api/interfaces/Reducer","title":"Reducer&lt;V, A&gt;","description":"Reactive function that can be used to accumulate each key\'s values.","source":"@site/docs/api/api/interfaces/Reducer.md","sourceDirName":"api/api/interfaces","slug":"/api/api/interfaces/Reducer","permalink":"/docs/api/api/interfaces/Reducer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Mapper","permalink":"/docs/api/api/interfaces/Mapper"},"next":{"title":"Resource","permalink":"/docs/api/api/interfaces/Resource"}}');var s=c(4848),r=c(8453);const a={},l="Reducer<V, A>",i={},t=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"add()",id:"add",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"remove()",id:"remove",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Properties",id:"properties",level:2},{value:"initial",id:"initial",level:3}];function h(e){const d={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.header,{children:(0,s.jsx)(d.h1,{id:"reducerv-a",children:"Reducer<V, A>"})}),"\n",(0,s.jsx)(d.p,{children:"Reactive function that can be used to accumulate each key's values."}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.code,{children:"EagerCollection.reduce"})," accepts a constructor function of a top-level class that implements this ",(0,s.jsx)(d.code,{children:"Reducer"})," interface.\nFor each key in a collection, a ",(0,s.jsx)(d.code,{children:"Reducer"})," can compute and maintain an accumulated value of the key's values as associations are added and removed from the collection."]}),"\n",(0,s.jsx)(d.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Type Parameter"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.code,{children:"V"})," ",(0,s.jsx)(d.em,{children:"extends"})," ",(0,s.jsx)(d.a,{href:"/docs/api/api/type-aliases/Json",children:(0,s.jsx)(d.code,{children:"Json"})})]}),(0,s.jsx)(d.td,{children:"Type of input values."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.code,{children:"A"})," ",(0,s.jsx)(d.em,{children:"extends"})," ",(0,s.jsx)(d.a,{href:"/docs/api/api/type-aliases/Json",children:(0,s.jsx)(d.code,{children:"Json"})})]}),(0,s.jsx)(d.td,{children:"Type of accumulated and output values."})]})]})]}),"\n",(0,s.jsx)(d.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(d.h3,{id:"add",children:"add()"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-ts",children:"add(accum, value): A\n"})}),"\n",(0,s.jsx)(d.p,{children:"Include a new value into the accumulated value."}),"\n",(0,s.jsx)(d.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Parameter"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"accum"})}),(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.a,{href:"/docs/api/api/type-aliases/Nullable",children:(0,s.jsx)(d.code,{children:"Nullable"})}),"<",(0,s.jsx)(d.code,{children:"A"}),">"]}),(0,s.jsxs)(d.td,{children:["The current accumulated value; ",(0,s.jsx)(d.code,{children:"null"})," only if ",(0,s.jsx)(d.code,{children:"initial"})," is ",(0,s.jsx)(d.code,{children:"null"})," and ",(0,s.jsx)(d.code,{children:"value"})," is the first to be added."]})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.code,{children:"V"})," & ",(0,s.jsx)(d.a,{href:"/docs/api/api/type-aliases/DepSafe",children:(0,s.jsx)(d.code,{children:"DepSafe"})})]}),(0,s.jsx)(d.td,{children:"The added value."})]})]})]}),"\n",(0,s.jsx)(d.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(d.p,{children:(0,s.jsx)(d.code,{children:"A"})}),"\n",(0,s.jsx)(d.p,{children:"The updated accumulated value."}),"\n",(0,s.jsx)(d.hr,{}),"\n",(0,s.jsx)(d.h3,{id:"remove",children:"remove()"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-ts",children:"remove(accum, value): Nullable<A>\n"})}),"\n",(0,s.jsx)(d.p,{children:"Exclude a previously added value from the accumulated value."}),"\n",(0,s.jsxs)(d.p,{children:["It is always valid for ",(0,s.jsx)(d.code,{children:"remove"})," to return ",(0,s.jsx)(d.code,{children:"null"}),", in which case the correct accumulated value will be computed using ",(0,s.jsx)(d.code,{children:"initial"})," and ",(0,s.jsx)(d.code,{children:"add"})," on each of the key's values."]}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.strong,{children:"WARNING"}),": If ",(0,s.jsx)(d.code,{children:"remove"})," returns a non-",(0,s.jsx)(d.code,{children:"null"})," value, then it ",(0,s.jsx)(d.strong,{children:"must"})," be equal to calling ",(0,s.jsx)(d.code,{children:"add"})," on each of the values associated to the key, starting from ",(0,s.jsx)(d.code,{children:"initial"}),".\nThat is, ",(0,s.jsx)(d.code,{children:"accum"}),", ",(0,s.jsx)(d.code,{children:"add(remove(accum, value), value)"}),", and ",(0,s.jsx)(d.code,{children:"remove(add(accum, value), value)"})," must all be equal for any ",(0,s.jsx)(d.code,{children:"accum"})," and ",(0,s.jsx)(d.code,{children:"value"})," unless both the mentioned ",(0,s.jsx)(d.code,{children:"remove"})," calls return ",(0,s.jsx)(d.code,{children:"null"}),"."]}),"\n",(0,s.jsx)(d.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(d.table,{children:[(0,s.jsx)(d.thead,{children:(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.th,{children:"Parameter"}),(0,s.jsx)(d.th,{children:"Type"}),(0,s.jsx)(d.th,{children:"Description"})]})}),(0,s.jsxs)(d.tbody,{children:[(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"accum"})}),(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"A"})}),(0,s.jsx)(d.td,{children:"The current accumulated value."})]}),(0,s.jsxs)(d.tr,{children:[(0,s.jsx)(d.td,{children:(0,s.jsx)(d.code,{children:"value"})}),(0,s.jsxs)(d.td,{children:[(0,s.jsx)(d.code,{children:"V"})," & ",(0,s.jsx)(d.a,{href:"/docs/api/api/type-aliases/DepSafe",children:(0,s.jsx)(d.code,{children:"DepSafe"})})]}),(0,s.jsx)(d.td,{children:"The removed value."})]})]})]}),"\n",(0,s.jsx)(d.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(d.p,{children:[(0,s.jsx)(d.a,{href:"/docs/api/api/type-aliases/Nullable",children:(0,s.jsx)(d.code,{children:"Nullable"})}),"<",(0,s.jsx)(d.code,{children:"A"}),">"]}),"\n",(0,s.jsxs)(d.p,{children:["The updated accumulated value, or ",(0,s.jsx)(d.code,{children:"null"})," indicating that the accumulated value should be recomputed using ",(0,s.jsx)(d.code,{children:"add"})," and ",(0,s.jsx)(d.code,{children:"initial"}),"."]}),"\n",(0,s.jsx)(d.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(d.h3,{id:"initial",children:"initial"}),"\n",(0,s.jsx)(d.pre,{children:(0,s.jsx)(d.code,{className:"language-ts",children:"initial: Nullable<A>;\n"})}),"\n",(0,s.jsx)(d.p,{children:"Initial accumulated value, providing the accumulated value for keys that are not associated to any values."})]})}function o(e={}){const{wrapper:d}={...(0,r.R)(),...e.components};return d?(0,s.jsx)(d,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,d,c)=>{c.d(d,{R:()=>a,x:()=>l});var n=c(6540);const s={},r=n.createContext(s);function a(e){const d=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function l(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:d},e.children)}}}]);